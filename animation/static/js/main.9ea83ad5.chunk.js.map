{"version":3,"sources":["App.js","index.js"],"names":["App","Component","constructor","props","super","this","state","animation","clicked","componentDidMount","lottie","loadAnimation","container","document","querySelector","renderer","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","setState","playToClick","setDirection","playSegments","playToStart","playFromClick","render","btnClassName","Fragment","id","className","href","target","onMouseEnter","onMouseLeave","onClick","e","preventDefault","ReactDOM","getElementById"],"mappings":"6MAIA,MAAMA,UAAYC,YAChBC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,MAAQ,CACXC,UAAW,KACXC,SAAS,GAIbC,oBACE,MAAMF,EAAYG,IAAOC,cAAc,CACrCC,UAAWC,SAASC,cAAc,cAClCC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,gBACAC,iBAAkB,CAChBC,oBAAqB,mBAIzBf,KAAKgB,SAAS,CACZd,cAIJe,cACEjB,KAAKC,MAAMC,UAAUgB,aAAa,GAClClB,KAAKC,MAAMC,UAAUiB,aAAa,CAAC,EAAG,KAGxCC,cACMpB,KAAKC,MAAME,SACbH,KAAKgB,SAAS,CACZb,SAAS,IAEXH,KAAKC,MAAMC,UAAUgB,aAAa,GAClClB,KAAKC,MAAMC,UAAUiB,aAAa,CAAC,GAAI,QAEvCnB,KAAKC,MAAMC,UAAUgB,cAAc,GACnClB,KAAKC,MAAMC,UAAUiB,aAAa,CAAC,GAAI,KAI3CE,gBACMrB,KAAKC,MAAME,UAIfH,KAAKC,MAAMC,UAAUgB,aAAa,GAClClB,KAAKC,MAAMC,UAAUiB,aAAa,CAAC,GAAI,KACvCnB,KAAKgB,SAAS,CACZb,SAAS,KAIbmB,SACE,MAAMC,EAAevB,KAAKC,MAAME,QAC5B,2BACA,mBAEJ,OACE,cAAC,IAAMqB,SAAP,UACE,qBAAKC,GAAG,YAAR,SACE,qBAAKC,UAAU,6BAAf,SACE,mBACEC,KAAK,QACLF,GAAG,SACHG,OAAO,UACPF,UAAWH,EACXM,aAAc,KACZ7B,KAAKiB,eAEPa,aAAc,KACZ9B,KAAKoB,eAEPW,QAASC,IACFhC,KAAKC,MAAME,UACd6B,EAAEC,iBACFjC,KAAKqB,kBAdX,SAkBGrB,KAAKC,MAAME,QAAU,oBAAsB,0BAS3CR,QC5FfuC,IAASZ,OAAO,cAAC,EAAD,IAASd,SAAS2B,eAAe,U","file":"static/js/main.9ea83ad5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './animation.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: null,\n      clicked: false,\n    };\n  }\n\n  componentDidMount() {\n    const animation = lottie.loadAnimation({\n      container: document.querySelector('#animation'),\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid meet',\n      },\n    });\n\n    this.setState({\n      animation,\n    });\n  }\n\n  playToClick() {\n    this.state.animation.setDirection(1);\n    this.state.animation.playSegments([0, 25]);\n  }\n\n  playToStart() {\n    if (this.state.clicked) {\n      this.setState({\n        clicked: false,\n      });\n      this.state.animation.setDirection(1);\n      this.state.animation.playSegments([85, 120]);\n    } else {\n      this.state.animation.setDirection(-1);\n      this.state.animation.playSegments([25, 0]);\n    }\n  }\n\n  playFromClick() {\n    if (this.state.clicked) {\n      return;\n    }\n\n    this.state.animation.setDirection(1);\n    this.state.animation.playSegments([25, 85]);\n    this.setState({\n      clicked: true,\n    });\n  }\n\n  render() {\n    const btnClassName = this.state.clicked\n      ? 'animation-button graphql'\n      : 'animation-button';\n\n    return (\n      <React.Fragment>\n        <div id=\"animation\">\n          <div className=\"animation-button-container\">\n            <a\n              href=\"/docs\"\n              id=\"button\"\n              target=\"_parent\"\n              className={btnClassName}\n              onMouseEnter={() => {\n                this.playToClick();\n              }}\n              onMouseLeave={() => {\n                this.playToStart();\n              }}\n              onClick={e => {\n                if (!this.state.clicked) {\n                  e.preventDefault();\n                  this.playFromClick();\n                }\n              }}\n            >\n              {this.state.clicked ? 'See how it works!' : 'Switch to REST'}\n            </a>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}